// Алгоритм
// Допустим, у нас есть одномерный массив array, в котором n элементов. 
// Найдём элемент, совпадающий с некоторым значением, который определяет пользователей.
// 1. Сохраним его в переменную find. Затем установим счётчик в нулевую позицию.
// 2. Если на текущей позиции элемент совпал с find, операцию можно завершить, потому что мы нашли позицию.
// 3. Если элемент не совпал с find, увеличиваем значение счётчика index на 1 и переходим на предыдущий шаг.
// 4. Сравниваем снова. И если элемент совпал с find, значит, алгоритм закончил работу.
// 5. Если элемент совпал с find, снова увеличиваем индекс. Смотрим результат.
// 6. В результате если элемент находится, операция завершается успешно. 
// А если этого элемента так и нет, надо сообщить об этом.

// Имеется одномерный массив array из n элементов, требуется найти элемент массива, равный find
// 1. Установить счетчик index в позицию 0
// 2. Если array [index] = find, алгоритм завершил работу
// успешно.
// 3. Увеличить index на 1
// 4. Если index < n, то перейти к шагу 2. В противном случае
// алгоритм завершил работу безуспешно.

// если значения в массиве уникальные
int[] array = { 1, 12, 31, 4, 15, 16, 17, 18 };

int n = array.Length;
int find = 18;

int index = 0;

while (index < n)
{
    if (array[index] == find)
    {
        Console.WriteLine(index);
    }
    index++;
    
}

// если значения в массиве повторяются
int[] array = { 1, 12, 31, 18, 4, 15, 16, 17, 18 };

int n = array.Length;
int find = 18;

int index = 0;

while (index < n)
{
    if (array[index] == find)
    {
        Console.WriteLine(index);
        break; // если условие выполняется, завершает работу, показывает первый элемент с заданным числом
    }
    index++;
    
}